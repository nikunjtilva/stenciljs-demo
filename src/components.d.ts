/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';

import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SearchBar {

    }
  }

  interface HTMLSearchBarElement extends StencilComponents.SearchBar, HTMLStencilElement {}

  var HTMLSearchBarElement: {
    prototype: HTMLSearchBarElement;
    new (): HTMLSearchBarElement;
  };
  interface HTMLElementTagNameMap {
    'search-bar': HTMLSearchBarElement;
  }
  interface ElementTagNameMap {
    'search-bar': HTMLSearchBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'search-bar': JSXElements.SearchBarAttributes;
    }
  }
  namespace JSXElements {
    export interface SearchBarAttributes extends HTMLAttributes {
      'onOnSearch'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SearchResult {
      'searchresult': any;
    }
  }

  interface HTMLSearchResultElement extends StencilComponents.SearchResult, HTMLStencilElement {}

  var HTMLSearchResultElement: {
    prototype: HTMLSearchResultElement;
    new (): HTMLSearchResultElement;
  };
  interface HTMLElementTagNameMap {
    'search-result': HTMLSearchResultElement;
  }
  interface ElementTagNameMap {
    'search-result': HTMLSearchResultElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'search-result': JSXElements.SearchResultAttributes;
    }
  }
  namespace JSXElements {
    export interface SearchResultAttributes extends HTMLAttributes {
      'searchresult'?: any;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SearchResults {
      'searchresults': any[];
    }
  }

  interface HTMLSearchResultsElement extends StencilComponents.SearchResults, HTMLStencilElement {}

  var HTMLSearchResultsElement: {
    prototype: HTMLSearchResultsElement;
    new (): HTMLSearchResultsElement;
  };
  interface HTMLElementTagNameMap {
    'search-results': HTMLSearchResultsElement;
  }
  interface ElementTagNameMap {
    'search-results': HTMLSearchResultsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'search-results': JSXElements.SearchResultsAttributes;
    }
  }
  namespace JSXElements {
    export interface SearchResultsAttributes extends HTMLAttributes {
      'searchresults'?: any[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface LandingPage {
      'history': RouterHistory;
    }
  }

  interface HTMLLandingPageElement extends StencilComponents.LandingPage, HTMLStencilElement {}

  var HTMLLandingPageElement: {
    prototype: HTMLLandingPageElement;
    new (): HTMLLandingPageElement;
  };
  interface HTMLElementTagNameMap {
    'landing-page': HTMLLandingPageElement;
  }
  interface ElementTagNameMap {
    'landing-page': HTMLLandingPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'landing-page': JSXElements.LandingPageAttributes;
    }
  }
  namespace JSXElements {
    export interface LandingPageAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SearchResultPage {
      'history': RouterHistory;
      'match': MatchResults;
    }
  }

  interface HTMLSearchResultPageElement extends StencilComponents.SearchResultPage, HTMLStencilElement {}

  var HTMLSearchResultPageElement: {
    prototype: HTMLSearchResultPageElement;
    new (): HTMLSearchResultPageElement;
  };
  interface HTMLElementTagNameMap {
    'search-result-page': HTMLSearchResultPageElement;
  }
  interface ElementTagNameMap {
    'search-result-page': HTMLSearchResultPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'search-result-page': JSXElements.SearchResultPageAttributes;
    }
  }
  namespace JSXElements {
    export interface SearchResultPageAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'match'?: MatchResults;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
